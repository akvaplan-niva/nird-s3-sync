name: Push
on: [push]

jobs:
  test:
    env:
      MIN_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: ${{ secrets.MINROOTPWD }}
    services:
      minio:
        image: tacmat/minio-service-github-actions:latest
        ports:
          - 9000:9000
        options: --name=minio -e MIN_ROOT_USER=${MIN_ROOT_USER} -e MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD} --health-cmd "curl -I http://localhost:9000/minio/health/live"
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12']
        poetry-version: ['2.0.1']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run poetry image
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        env:
          MINIO_ROOT_PASSWORD: ${{ secrets.MINIOROOTPWD }}
        run: poetry run pytest --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
  code-quality:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12']
        poetry-version: ['2.0.1']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: poetry install
      - name: Run black
        run: poetry run black . --check
      - name: Run isort
        run: poetry run isort . --check-only --profile black
      - name: Run flake8
        run: poetry run flake8 .
